package gen;

// Generated from /home/luis/Descargas/Diunisio/src/Diunisio.g4 by ANTLR 4.7.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class DiunisioLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, COMENTARIO=24, 
		CLASE=25, ALGORITMO=26, TERMINA=27, ENTONCES=28, O=29, Y=30, IGUAL=31, 
		DIFERENTE=32, MAYOR=33, MENOR=34, MAY_IGUAL=35, MEN_IGUAL=36, SUMA=37, 
		MENOS=38, MULT=39, DIV=40, MOD=41, POTENCIA=42, NO=43, DEF=44, RETORNAR=45, 
		INT=46, FLOAT=47, STRING=48, BOOL=49, MATRIZ=50, VECTOR=51, PCOMA=52, 
		ASIGNAR=53, PAREN_AP=54, PAREN_CI=55, LLAVEIZ=56, LLAVEDE=57, ANGIZ=58, 
		ANGDE=59, COMA=60, DOSPUNTOS=61, VERDADERO=62, FALSO=63, NULO=64, SI=65, 
		SI_NO=66, MIENTRAS=67, SELECCIONAR=68, CASO=69, ROMPER=70, HACER=71, PARA=72, 
		DEFECTO=73, IDENTIFICADOR=74, ENTERO=75, REAL=76, COMPLEJO=77, CADENA=78, 
		ESPACIO=79, OTRO=80, ESTA=81;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "COMENTARIO", "CLASE", 
			"ALGORITMO", "TERMINA", "ENTONCES", "O", "Y", "IGUAL", "DIFERENTE", "MAYOR", 
			"MENOR", "MAY_IGUAL", "MEN_IGUAL", "SUMA", "MENOS", "MULT", "DIV", "MOD", 
			"POTENCIA", "NO", "DEF", "RETORNAR", "INT", "FLOAT", "STRING", "BOOL", 
			"MATRIZ", "VECTOR", "PCOMA", "ASIGNAR", "PAREN_AP", "PAREN_CI", "LLAVEIZ", 
			"LLAVEDE", "ANGIZ", "ANGDE", "COMA", "DOSPUNTOS", "VERDADERO", "FALSO", 
			"NULO", "SI", "SI_NO", "MIENTRAS", "SELECCIONAR", "CASO", "ROMPER", "HACER", 
			"PARA", "DEFECTO", "IDENTIFICADOR", "ENTERO", "REAL", "COMPLEJO", "CADENA", 
			"ESPACIO", "OTRO", "ESTA"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'package'", "'usando'", "'publica'", "'protegida'", "'privada'", 
			"'abstracta'", "'estatica'", "'final'", "'clase'", "'extends'", "'implements'", 
			"'&'", "'interface'", "'void'", "'throws'", "'native'", "'synchronized'", 
			"'transient'", "'volatile'", "'strictfp'", "'...'", "'@'", "'this'", 
			null, "'Clase'", "'ALGORITMO'", "'.'", "'entonces'", "'||'", "'&&'", 
			"'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'+'", "'-'", "'*'", "'/'", 
			"'%'", "'^'", "'!'", "'def'", "'retornar'", "'entero'", "'decimal'", 
			"'cadena'", "'booleano'", "'matriz'", "'vector'", "';'", "'='", "'('", 
			"')'", "'{'", "'}'", "'['", "']'", "','", "':'", "'verdadero'", "'falso'", 
			"'nulo'", "'si'", "'si_no'", "'mientras'", "'seleccionar'", "'caso'", 
			"'romper'", "'hacer'", "'para'", "'defecto'", null, null, null, null, 
			null, null, null, "'esta'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			"COMENTARIO", "CLASE", "ALGORITMO", "TERMINA", "ENTONCES", "O", "Y", 
			"IGUAL", "DIFERENTE", "MAYOR", "MENOR", "MAY_IGUAL", "MEN_IGUAL", "SUMA", 
			"MENOS", "MULT", "DIV", "MOD", "POTENCIA", "NO", "DEF", "RETORNAR", "INT", 
			"FLOAT", "STRING", "BOOL", "MATRIZ", "VECTOR", "PCOMA", "ASIGNAR", "PAREN_AP", 
			"PAREN_CI", "LLAVEIZ", "LLAVEDE", "ANGIZ", "ANGDE", "COMA", "DOSPUNTOS", 
			"VERDADERO", "FALSO", "NULO", "SI", "SI_NO", "MIENTRAS", "SELECCIONAR", 
			"CASO", "ROMPER", "HACER", "PARA", "DEFECTO", "IDENTIFICADOR", "ENTERO", 
			"REAL", "COMPLEJO", "CADENA", "ESPACIO", "OTRO", "ESTA"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public DiunisioLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Diunisio.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2S\u028d\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\3\2\3\2\3\2"+
		"\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3"+
		"\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6"+
		"\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3"+
		"\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\13"+
		"\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3"+
		"\f\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3"+
		"\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3"+
		"\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3"+
		"\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3"+
		"\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3"+
		"\30\3\31\3\31\7\31\u0156\n\31\f\31\16\31\u0159\13\31\3\31\3\31\3\31\3"+
		"\31\7\31\u015f\n\31\f\31\16\31\u0162\13\31\3\31\3\31\5\31\u0166\n\31\3"+
		"\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3"+
		"\33\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3"+
		"\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3#\3#\3$\3"+
		"$\3$\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3-\3-"+
		"\3.\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3"+
		"\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3"+
		"\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\64\3"+
		"\64\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\3"+
		"9\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3?\3?\3?\3?\3?\3?\3?\3?\3@\3@\3"+
		"@\3@\3@\3@\3A\3A\3A\3A\3A\3B\3B\3B\3C\3C\3C\3C\3C\3C\3D\3D\3D\3D\3D\3"+
		"D\3D\3D\3D\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3E\3F\3F\3F\3F\3F\3G\3G\3"+
		"G\3G\3G\3G\3G\3H\3H\3H\3H\3H\3H\3I\3I\3I\3I\3I\3J\3J\3J\3J\3J\3J\3J\3"+
		"J\3K\3K\7K\u024b\nK\fK\16K\u024e\13K\3L\6L\u0251\nL\rL\16L\u0252\3M\7"+
		"M\u0256\nM\fM\16M\u0259\13M\3M\3M\7M\u025d\nM\fM\16M\u0260\13M\3M\3M\5"+
		"M\u0264\nM\3M\6M\u0267\nM\rM\16M\u0268\5M\u026b\nM\3N\3N\5N\u026f\nN\3"+
		"N\3N\3N\5N\u0274\nN\3N\3N\3O\3O\3O\3O\7O\u027c\nO\fO\16O\u027f\13O\3O"+
		"\3O\3P\3P\3P\3P\3Q\3Q\3R\3R\3R\3R\3R\3\u0160\2S\3\3\5\4\7\5\t\6\13\7\r"+
		"\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O"+
		")Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081"+
		"B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091J\u0093K\u0095"+
		"L\u0097M\u0099N\u009bO\u009dP\u009fQ\u00a1R\u00a3S\3\2\13\4\2\f\f\17\17"+
		"\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\4\2GGgg\4\2--//\5\2--//~~\5\2\f\f\17"+
		"\17$$\5\2\13\f\17\17\"\"\2\u029b\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2"+
		"\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2"+
		"\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2"+
		"\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2"+
		"\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2"+
		"\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2"+
		"\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O"+
		"\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2"+
		"\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2"+
		"\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u"+
		"\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081"+
		"\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2"+
		"\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093"+
		"\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2"+
		"\2\2\u009d\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\3\u00a5"+
		"\3\2\2\2\5\u00ad\3\2\2\2\7\u00b4\3\2\2\2\t\u00bc\3\2\2\2\13\u00c6\3\2"+
		"\2\2\r\u00ce\3\2\2\2\17\u00d8\3\2\2\2\21\u00e1\3\2\2\2\23\u00e7\3\2\2"+
		"\2\25\u00ed\3\2\2\2\27\u00f5\3\2\2\2\31\u0100\3\2\2\2\33\u0102\3\2\2\2"+
		"\35\u010c\3\2\2\2\37\u0111\3\2\2\2!\u0118\3\2\2\2#\u011f\3\2\2\2%\u012c"+
		"\3\2\2\2\'\u0136\3\2\2\2)\u013f\3\2\2\2+\u0148\3\2\2\2-\u014c\3\2\2\2"+
		"/\u014e\3\2\2\2\61\u0165\3\2\2\2\63\u0169\3\2\2\2\65\u016f\3\2\2\2\67"+
		"\u0179\3\2\2\29\u017b\3\2\2\2;\u0184\3\2\2\2=\u0187\3\2\2\2?\u018a\3\2"+
		"\2\2A\u018d\3\2\2\2C\u0190\3\2\2\2E\u0192\3\2\2\2G\u0194\3\2\2\2I\u0197"+
		"\3\2\2\2K\u019a\3\2\2\2M\u019c\3\2\2\2O\u019e\3\2\2\2Q\u01a0\3\2\2\2S"+
		"\u01a2\3\2\2\2U\u01a4\3\2\2\2W\u01a6\3\2\2\2Y\u01a8\3\2\2\2[\u01ac\3\2"+
		"\2\2]\u01b5\3\2\2\2_\u01bc\3\2\2\2a\u01c4\3\2\2\2c\u01cb\3\2\2\2e\u01d4"+
		"\3\2\2\2g\u01db\3\2\2\2i\u01e2\3\2\2\2k\u01e4\3\2\2\2m\u01e6\3\2\2\2o"+
		"\u01e8\3\2\2\2q\u01ea\3\2\2\2s\u01ec\3\2\2\2u\u01ee\3\2\2\2w\u01f0\3\2"+
		"\2\2y\u01f2\3\2\2\2{\u01f4\3\2\2\2}\u01f6\3\2\2\2\177\u0200\3\2\2\2\u0081"+
		"\u0206\3\2\2\2\u0083\u020b\3\2\2\2\u0085\u020e\3\2\2\2\u0087\u0214\3\2"+
		"\2\2\u0089\u021d\3\2\2\2\u008b\u0229\3\2\2\2\u008d\u022e\3\2\2\2\u008f"+
		"\u0235\3\2\2\2\u0091\u023b\3\2\2\2\u0093\u0240\3\2\2\2\u0095\u0248\3\2"+
		"\2\2\u0097\u0250\3\2\2\2\u0099\u0257\3\2\2\2\u009b\u026e\3\2\2\2\u009d"+
		"\u0277\3\2\2\2\u009f\u0282\3\2\2\2\u00a1\u0286\3\2\2\2\u00a3\u0288\3\2"+
		"\2\2\u00a5\u00a6\7r\2\2\u00a6\u00a7\7c\2\2\u00a7\u00a8\7e\2\2\u00a8\u00a9"+
		"\7m\2\2\u00a9\u00aa\7c\2\2\u00aa\u00ab\7i\2\2\u00ab\u00ac\7g\2\2\u00ac"+
		"\4\3\2\2\2\u00ad\u00ae\7w\2\2\u00ae\u00af\7u\2\2\u00af\u00b0\7c\2\2\u00b0"+
		"\u00b1\7p\2\2\u00b1\u00b2\7f\2\2\u00b2\u00b3\7q\2\2\u00b3\6\3\2\2\2\u00b4"+
		"\u00b5\7r\2\2\u00b5\u00b6\7w\2\2\u00b6\u00b7\7d\2\2\u00b7\u00b8\7n\2\2"+
		"\u00b8\u00b9\7k\2\2\u00b9\u00ba\7e\2\2\u00ba\u00bb\7c\2\2\u00bb\b\3\2"+
		"\2\2\u00bc\u00bd\7r\2\2\u00bd\u00be\7t\2\2\u00be\u00bf\7q\2\2\u00bf\u00c0"+
		"\7v\2\2\u00c0\u00c1\7g\2\2\u00c1\u00c2\7i\2\2\u00c2\u00c3\7k\2\2\u00c3"+
		"\u00c4\7f\2\2\u00c4\u00c5\7c\2\2\u00c5\n\3\2\2\2\u00c6\u00c7\7r\2\2\u00c7"+
		"\u00c8\7t\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca\7x\2\2\u00ca\u00cb\7c\2\2"+
		"\u00cb\u00cc\7f\2\2\u00cc\u00cd\7c\2\2\u00cd\f\3\2\2\2\u00ce\u00cf\7c"+
		"\2\2\u00cf\u00d0\7d\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d2\7v\2\2\u00d2\u00d3"+
		"\7t\2\2\u00d3\u00d4\7c\2\2\u00d4\u00d5\7e\2\2\u00d5\u00d6\7v\2\2\u00d6"+
		"\u00d7\7c\2\2\u00d7\16\3\2\2\2\u00d8\u00d9\7g\2\2\u00d9\u00da\7u\2\2\u00da"+
		"\u00db\7v\2\2\u00db\u00dc\7c\2\2\u00dc\u00dd\7v\2\2\u00dd\u00de\7k\2\2"+
		"\u00de\u00df\7e\2\2\u00df\u00e0\7c\2\2\u00e0\20\3\2\2\2\u00e1\u00e2\7"+
		"h\2\2\u00e2\u00e3\7k\2\2\u00e3\u00e4\7p\2\2\u00e4\u00e5\7c\2\2\u00e5\u00e6"+
		"\7n\2\2\u00e6\22\3\2\2\2\u00e7\u00e8\7e\2\2\u00e8\u00e9\7n\2\2\u00e9\u00ea"+
		"\7c\2\2\u00ea\u00eb\7u\2\2\u00eb\u00ec\7g\2\2\u00ec\24\3\2\2\2\u00ed\u00ee"+
		"\7g\2\2\u00ee\u00ef\7z\2\2\u00ef\u00f0\7v\2\2\u00f0\u00f1\7g\2\2\u00f1"+
		"\u00f2\7p\2\2\u00f2\u00f3\7f\2\2\u00f3\u00f4\7u\2\2\u00f4\26\3\2\2\2\u00f5"+
		"\u00f6\7k\2\2\u00f6\u00f7\7o\2\2\u00f7\u00f8\7r\2\2\u00f8\u00f9\7n\2\2"+
		"\u00f9\u00fa\7g\2\2\u00fa\u00fb\7o\2\2\u00fb\u00fc\7g\2\2\u00fc\u00fd"+
		"\7p\2\2\u00fd\u00fe\7v\2\2\u00fe\u00ff\7u\2\2\u00ff\30\3\2\2\2\u0100\u0101"+
		"\7(\2\2\u0101\32\3\2\2\2\u0102\u0103\7k\2\2\u0103\u0104\7p\2\2\u0104\u0105"+
		"\7v\2\2\u0105\u0106\7g\2\2\u0106\u0107\7t\2\2\u0107\u0108\7h\2\2\u0108"+
		"\u0109\7c\2\2\u0109\u010a\7e\2\2\u010a\u010b\7g\2\2\u010b\34\3\2\2\2\u010c"+
		"\u010d\7x\2\2\u010d\u010e\7q\2\2\u010e\u010f\7k\2\2\u010f\u0110\7f\2\2"+
		"\u0110\36\3\2\2\2\u0111\u0112\7v\2\2\u0112\u0113\7j\2\2\u0113\u0114\7"+
		"t\2\2\u0114\u0115\7q\2\2\u0115\u0116\7y\2\2\u0116\u0117\7u\2\2\u0117 "+
		"\3\2\2\2\u0118\u0119\7p\2\2\u0119\u011a\7c\2\2\u011a\u011b\7v\2\2\u011b"+
		"\u011c\7k\2\2\u011c\u011d\7x\2\2\u011d\u011e\7g\2\2\u011e\"\3\2\2\2\u011f"+
		"\u0120\7u\2\2\u0120\u0121\7{\2\2\u0121\u0122\7p\2\2\u0122\u0123\7e\2\2"+
		"\u0123\u0124\7j\2\2\u0124\u0125\7t\2\2\u0125\u0126\7q\2\2\u0126\u0127"+
		"\7p\2\2\u0127\u0128\7k\2\2\u0128\u0129\7|\2\2\u0129\u012a\7g\2\2\u012a"+
		"\u012b\7f\2\2\u012b$\3\2\2\2\u012c\u012d\7v\2\2\u012d\u012e\7t\2\2\u012e"+
		"\u012f\7c\2\2\u012f\u0130\7p\2\2\u0130\u0131\7u\2\2\u0131\u0132\7k\2\2"+
		"\u0132\u0133\7g\2\2\u0133\u0134\7p\2\2\u0134\u0135\7v\2\2\u0135&\3\2\2"+
		"\2\u0136\u0137\7x\2\2\u0137\u0138\7q\2\2\u0138\u0139\7n\2\2\u0139\u013a"+
		"\7c\2\2\u013a\u013b\7v\2\2\u013b\u013c\7k\2\2\u013c\u013d\7n\2\2\u013d"+
		"\u013e\7g\2\2\u013e(\3\2\2\2\u013f\u0140\7u\2\2\u0140\u0141\7v\2\2\u0141"+
		"\u0142\7t\2\2\u0142\u0143\7k\2\2\u0143\u0144\7e\2\2\u0144\u0145\7v\2\2"+
		"\u0145\u0146\7h\2\2\u0146\u0147\7r\2\2\u0147*\3\2\2\2\u0148\u0149\7\60"+
		"\2\2\u0149\u014a\7\60\2\2\u014a\u014b\7\60\2\2\u014b,\3\2\2\2\u014c\u014d"+
		"\7B\2\2\u014d.\3\2\2\2\u014e\u014f\7v\2\2\u014f\u0150\7j\2\2\u0150\u0151"+
		"\7k\2\2\u0151\u0152\7u\2\2\u0152\60\3\2\2\2\u0153\u0157\7%\2\2\u0154\u0156"+
		"\n\2\2\2\u0155\u0154\3\2\2\2\u0156\u0159\3\2\2\2\u0157\u0155\3\2\2\2\u0157"+
		"\u0158\3\2\2\2\u0158\u0166\3\2\2\2\u0159\u0157\3\2\2\2\u015a\u015b\7\61"+
		"\2\2\u015b\u015c\7,\2\2\u015c\u0160\3\2\2\2\u015d\u015f\13\2\2\2\u015e"+
		"\u015d\3\2\2\2\u015f\u0162\3\2\2\2\u0160\u0161\3\2\2\2\u0160\u015e\3\2"+
		"\2\2\u0161\u0163\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u0164\7,\2\2\u0164"+
		"\u0166\7\61\2\2\u0165\u0153\3\2\2\2\u0165\u015a\3\2\2\2\u0166\u0167\3"+
		"\2\2\2\u0167\u0168\b\31\2\2\u0168\62\3\2\2\2\u0169\u016a\7E\2\2\u016a"+
		"\u016b\7n\2\2\u016b\u016c\7c\2\2\u016c\u016d\7u\2\2\u016d\u016e\7g\2\2"+
		"\u016e\64\3\2\2\2\u016f\u0170\7C\2\2\u0170\u0171\7N\2\2\u0171\u0172\7"+
		"I\2\2\u0172\u0173\7Q\2\2\u0173\u0174\7T\2\2\u0174\u0175\7K\2\2\u0175\u0176"+
		"\7V\2\2\u0176\u0177\7O\2\2\u0177\u0178\7Q\2\2\u0178\66\3\2\2\2\u0179\u017a"+
		"\7\60\2\2\u017a8\3\2\2\2\u017b\u017c\7g\2\2\u017c\u017d\7p\2\2\u017d\u017e"+
		"\7v\2\2\u017e\u017f\7q\2\2\u017f\u0180\7p\2\2\u0180\u0181\7e\2\2\u0181"+
		"\u0182\7g\2\2\u0182\u0183\7u\2\2\u0183:\3\2\2\2\u0184\u0185\7~\2\2\u0185"+
		"\u0186\7~\2\2\u0186<\3\2\2\2\u0187\u0188\7(\2\2\u0188\u0189\7(\2\2\u0189"+
		">\3\2\2\2\u018a\u018b\7?\2\2\u018b\u018c\7?\2\2\u018c@\3\2\2\2\u018d\u018e"+
		"\7#\2\2\u018e\u018f\7?\2\2\u018fB\3\2\2\2\u0190\u0191\7@\2\2\u0191D\3"+
		"\2\2\2\u0192\u0193\7>\2\2\u0193F\3\2\2\2\u0194\u0195\7@\2\2\u0195\u0196"+
		"\7?\2\2\u0196H\3\2\2\2\u0197\u0198\7>\2\2\u0198\u0199\7?\2\2\u0199J\3"+
		"\2\2\2\u019a\u019b\7-\2\2\u019bL\3\2\2\2\u019c\u019d\7/\2\2\u019dN\3\2"+
		"\2\2\u019e\u019f\7,\2\2\u019fP\3\2\2\2\u01a0\u01a1\7\61\2\2\u01a1R\3\2"+
		"\2\2\u01a2\u01a3\7\'\2\2\u01a3T\3\2\2\2\u01a4\u01a5\7`\2\2\u01a5V\3\2"+
		"\2\2\u01a6\u01a7\7#\2\2\u01a7X\3\2\2\2\u01a8\u01a9\7f\2\2\u01a9\u01aa"+
		"\7g\2\2\u01aa\u01ab\7h\2\2\u01abZ\3\2\2\2\u01ac\u01ad\7t\2\2\u01ad\u01ae"+
		"\7g\2\2\u01ae\u01af\7v\2\2\u01af\u01b0\7q\2\2\u01b0\u01b1\7t\2\2\u01b1"+
		"\u01b2\7p\2\2\u01b2\u01b3\7c\2\2\u01b3\u01b4\7t\2\2\u01b4\\\3\2\2\2\u01b5"+
		"\u01b6\7g\2\2\u01b6\u01b7\7p\2\2\u01b7\u01b8\7v\2\2\u01b8\u01b9\7g\2\2"+
		"\u01b9\u01ba\7t\2\2\u01ba\u01bb\7q\2\2\u01bb^\3\2\2\2\u01bc\u01bd\7f\2"+
		"\2\u01bd\u01be\7g\2\2\u01be\u01bf\7e\2\2\u01bf\u01c0\7k\2\2\u01c0\u01c1"+
		"\7o\2\2\u01c1\u01c2\7c\2\2\u01c2\u01c3\7n\2\2\u01c3`\3\2\2\2\u01c4\u01c5"+
		"\7e\2\2\u01c5\u01c6\7c\2\2\u01c6\u01c7\7f\2\2\u01c7\u01c8\7g\2\2\u01c8"+
		"\u01c9\7p\2\2\u01c9\u01ca\7c\2\2\u01cab\3\2\2\2\u01cb\u01cc\7d\2\2\u01cc"+
		"\u01cd\7q\2\2\u01cd\u01ce\7q\2\2\u01ce\u01cf\7n\2\2\u01cf\u01d0\7g\2\2"+
		"\u01d0\u01d1\7c\2\2\u01d1\u01d2\7p\2\2\u01d2\u01d3\7q\2\2\u01d3d\3\2\2"+
		"\2\u01d4\u01d5\7o\2\2\u01d5\u01d6\7c\2\2\u01d6\u01d7\7v\2\2\u01d7\u01d8"+
		"\7t\2\2\u01d8\u01d9\7k\2\2\u01d9\u01da\7|\2\2\u01daf\3\2\2\2\u01db\u01dc"+
		"\7x\2\2\u01dc\u01dd\7g\2\2\u01dd\u01de\7e\2\2\u01de\u01df\7v\2\2\u01df"+
		"\u01e0\7q\2\2\u01e0\u01e1\7t\2\2\u01e1h\3\2\2\2\u01e2\u01e3\7=\2\2\u01e3"+
		"j\3\2\2\2\u01e4\u01e5\7?\2\2\u01e5l\3\2\2\2\u01e6\u01e7\7*\2\2\u01e7n"+
		"\3\2\2\2\u01e8\u01e9\7+\2\2\u01e9p\3\2\2\2\u01ea\u01eb\7}\2\2\u01ebr\3"+
		"\2\2\2\u01ec\u01ed\7\177\2\2\u01edt\3\2\2\2\u01ee\u01ef\7]\2\2\u01efv"+
		"\3\2\2\2\u01f0\u01f1\7_\2\2\u01f1x\3\2\2\2\u01f2\u01f3\7.\2\2\u01f3z\3"+
		"\2\2\2\u01f4\u01f5\7<\2\2\u01f5|\3\2\2\2\u01f6\u01f7\7x\2\2\u01f7\u01f8"+
		"\7g\2\2\u01f8\u01f9\7t\2\2\u01f9\u01fa\7f\2\2\u01fa\u01fb\7c\2\2\u01fb"+
		"\u01fc\7f\2\2\u01fc\u01fd\7g\2\2\u01fd\u01fe\7t\2\2\u01fe\u01ff\7q\2\2"+
		"\u01ff~\3\2\2\2\u0200\u0201\7h\2\2\u0201\u0202\7c\2\2\u0202\u0203\7n\2"+
		"\2\u0203\u0204\7u\2\2\u0204\u0205\7q\2\2\u0205\u0080\3\2\2\2\u0206\u0207"+
		"\7p\2\2\u0207\u0208\7w\2\2\u0208\u0209\7n\2\2\u0209\u020a\7q\2\2\u020a"+
		"\u0082\3\2\2\2\u020b\u020c\7u\2\2\u020c\u020d\7k\2\2\u020d\u0084\3\2\2"+
		"\2\u020e\u020f\7u\2\2\u020f\u0210\7k\2\2\u0210\u0211\7a\2\2\u0211\u0212"+
		"\7p\2\2\u0212\u0213\7q\2\2\u0213\u0086\3\2\2\2\u0214\u0215\7o\2\2\u0215"+
		"\u0216\7k\2\2\u0216\u0217\7g\2\2\u0217\u0218\7p\2\2\u0218\u0219\7v\2\2"+
		"\u0219\u021a\7t\2\2\u021a\u021b\7c\2\2\u021b\u021c\7u\2\2\u021c\u0088"+
		"\3\2\2\2\u021d\u021e\7u\2\2\u021e\u021f\7g\2\2\u021f\u0220\7n\2\2\u0220"+
		"\u0221\7g\2\2\u0221\u0222\7e\2\2\u0222\u0223\7e\2\2\u0223\u0224\7k\2\2"+
		"\u0224\u0225\7q\2\2\u0225\u0226\7p\2\2\u0226\u0227\7c\2\2\u0227\u0228"+
		"\7t\2\2\u0228\u008a\3\2\2\2\u0229\u022a\7e\2\2\u022a\u022b\7c\2\2\u022b"+
		"\u022c\7u\2\2\u022c\u022d\7q\2\2\u022d\u008c\3\2\2\2\u022e\u022f\7t\2"+
		"\2\u022f\u0230\7q\2\2\u0230\u0231\7o\2\2\u0231\u0232\7r\2\2\u0232\u0233"+
		"\7g\2\2\u0233\u0234\7t\2\2\u0234\u008e\3\2\2\2\u0235\u0236\7j\2\2\u0236"+
		"\u0237\7c\2\2\u0237\u0238\7e\2\2\u0238\u0239\7g\2\2\u0239\u023a\7t\2\2"+
		"\u023a\u0090\3\2\2\2\u023b\u023c\7r\2\2\u023c\u023d\7c\2\2\u023d\u023e"+
		"\7t\2\2\u023e\u023f\7c\2\2\u023f\u0092\3\2\2\2\u0240\u0241\7f\2\2\u0241"+
		"\u0242\7g\2\2\u0242\u0243\7h\2\2\u0243\u0244\7g\2\2\u0244\u0245\7e\2\2"+
		"\u0245\u0246\7v\2\2\u0246\u0247\7q\2\2\u0247\u0094\3\2\2\2\u0248\u024c"+
		"\t\3\2\2\u0249\u024b\t\4\2\2\u024a\u0249\3\2\2\2\u024b\u024e\3\2\2\2\u024c"+
		"\u024a\3\2\2\2\u024c\u024d\3\2\2\2\u024d\u0096\3\2\2\2\u024e\u024c\3\2"+
		"\2\2\u024f\u0251\t\5\2\2\u0250\u024f\3\2\2\2\u0251\u0252\3\2\2\2\u0252"+
		"\u0250\3\2\2\2\u0252\u0253\3\2\2\2\u0253\u0098\3\2\2\2\u0254\u0256\t\5"+
		"\2\2\u0255\u0254\3\2\2\2\u0256\u0259\3\2\2\2\u0257\u0255\3\2\2\2\u0257"+
		"\u0258\3\2\2\2\u0258\u025a\3\2\2\2\u0259\u0257\3\2\2\2\u025a\u025e\7\60"+
		"\2\2\u025b\u025d\t\5\2\2\u025c\u025b\3\2\2\2\u025d\u0260\3\2\2\2\u025e"+
		"\u025c\3\2\2\2\u025e\u025f\3\2\2\2\u025f\u026a\3\2\2\2\u0260\u025e\3\2"+
		"\2\2\u0261\u0263\t\6\2\2\u0262\u0264\t\7\2\2\u0263\u0262\3\2\2\2\u0263"+
		"\u0264\3\2\2\2\u0264\u0266\3\2\2\2\u0265\u0267\t\5\2\2\u0266\u0265\3\2"+
		"\2\2\u0267\u0268\3\2\2\2\u0268\u0266\3\2\2\2\u0268\u0269\3\2\2\2\u0269"+
		"\u026b\3\2\2\2\u026a\u0261\3\2\2\2\u026a\u026b\3\2\2\2\u026b\u009a\3\2"+
		"\2\2\u026c\u026f\5\u0097L\2\u026d\u026f\5\u0099M\2\u026e\u026c\3\2\2\2"+
		"\u026e\u026d\3\2\2\2\u026f\u0270\3\2\2\2\u0270\u0273\t\b\2\2\u0271\u0274"+
		"\5\u0097L\2\u0272\u0274\5\u0099M\2\u0273\u0271\3\2\2\2\u0273\u0272\3\2"+
		"\2\2\u0273\u0274\3\2\2\2\u0274\u0275\3\2\2\2\u0275\u0276\7k\2\2\u0276"+
		"\u009c\3\2\2\2\u0277\u027d\7$\2\2\u0278\u027c\n\t\2\2\u0279\u027a\7$\2"+
		"\2\u027a\u027c\7$\2\2\u027b\u0278\3\2\2\2\u027b\u0279\3\2\2\2\u027c\u027f"+
		"\3\2\2\2\u027d\u027b\3\2\2\2\u027d\u027e\3\2\2\2\u027e\u0280\3\2\2\2\u027f"+
		"\u027d\3\2\2\2\u0280\u0281\7$\2\2\u0281\u009e\3\2\2\2\u0282\u0283\t\n"+
		"\2\2\u0283\u0284\3\2\2\2\u0284\u0285\bP\2\2\u0285\u00a0\3\2\2\2\u0286"+
		"\u0287\13\2\2\2\u0287\u00a2\3\2\2\2\u0288\u0289\7g\2\2\u0289\u028a\7u"+
		"\2\2\u028a\u028b\7v\2\2\u028b\u028c\7c\2\2\u028c\u00a4\3\2\2\2\21\2\u0157"+
		"\u0160\u0165\u024c\u0252\u0257\u025e\u0263\u0268\u026a\u026e\u0273\u027b"+
		"\u027d\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}